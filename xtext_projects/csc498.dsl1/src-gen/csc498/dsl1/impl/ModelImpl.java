/**
 * generated by Xtext 2.22.0
 */
package csc498.dsl1.impl;

import csc498.dsl1.Contact;
import csc498.dsl1.Dsl1Package;
import csc498.dsl1.Email;
import csc498.dsl1.Model;
import csc498.dsl1.RSVP;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link csc498.dsl1.impl.ModelImpl#getContacts <em>Contacts</em>}</li>
 *   <li>{@link csc498.dsl1.impl.ModelImpl#getRsvps <em>Rsvps</em>}</li>
 *   <li>{@link csc498.dsl1.impl.ModelImpl#getEmails <em>Emails</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModelImpl extends MinimalEObjectImpl.Container implements Model
{
  /**
   * The cached value of the '{@link #getContacts() <em>Contacts</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContacts()
   * @generated
   * @ordered
   */
  protected EList<Contact> contacts;

  /**
   * The cached value of the '{@link #getRsvps() <em>Rsvps</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRsvps()
   * @generated
   * @ordered
   */
  protected EList<RSVP> rsvps;

  /**
   * The cached value of the '{@link #getEmails() <em>Emails</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmails()
   * @generated
   * @ordered
   */
  protected EList<Email> emails;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return Dsl1Package.Literals.MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Contact> getContacts()
  {
    if (contacts == null)
    {
      contacts = new EObjectContainmentEList<Contact>(Contact.class, this, Dsl1Package.MODEL__CONTACTS);
    }
    return contacts;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<RSVP> getRsvps()
  {
    if (rsvps == null)
    {
      rsvps = new EObjectContainmentEList<RSVP>(RSVP.class, this, Dsl1Package.MODEL__RSVPS);
    }
    return rsvps;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Email> getEmails()
  {
    if (emails == null)
    {
      emails = new EObjectContainmentEList<Email>(Email.class, this, Dsl1Package.MODEL__EMAILS);
    }
    return emails;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case Dsl1Package.MODEL__CONTACTS:
        return ((InternalEList<?>)getContacts()).basicRemove(otherEnd, msgs);
      case Dsl1Package.MODEL__RSVPS:
        return ((InternalEList<?>)getRsvps()).basicRemove(otherEnd, msgs);
      case Dsl1Package.MODEL__EMAILS:
        return ((InternalEList<?>)getEmails()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case Dsl1Package.MODEL__CONTACTS:
        return getContacts();
      case Dsl1Package.MODEL__RSVPS:
        return getRsvps();
      case Dsl1Package.MODEL__EMAILS:
        return getEmails();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case Dsl1Package.MODEL__CONTACTS:
        getContacts().clear();
        getContacts().addAll((Collection<? extends Contact>)newValue);
        return;
      case Dsl1Package.MODEL__RSVPS:
        getRsvps().clear();
        getRsvps().addAll((Collection<? extends RSVP>)newValue);
        return;
      case Dsl1Package.MODEL__EMAILS:
        getEmails().clear();
        getEmails().addAll((Collection<? extends Email>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case Dsl1Package.MODEL__CONTACTS:
        getContacts().clear();
        return;
      case Dsl1Package.MODEL__RSVPS:
        getRsvps().clear();
        return;
      case Dsl1Package.MODEL__EMAILS:
        getEmails().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case Dsl1Package.MODEL__CONTACTS:
        return contacts != null && !contacts.isEmpty();
      case Dsl1Package.MODEL__RSVPS:
        return rsvps != null && !rsvps.isEmpty();
      case Dsl1Package.MODEL__EMAILS:
        return emails != null && !emails.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ModelImpl
