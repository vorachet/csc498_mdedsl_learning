/*
 * generated by Xtext 2.22.0
 */
grammar InternalDsl1;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package csc498.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package csc498.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import csc498.services.Dsl1GrammarAccess;

}

@parser::members {

 	private Dsl1GrammarAccess grammarAccess;

    public InternalDsl1Parser(TokenStream input, Dsl1GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected Dsl1GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getContactsContactParserRuleCall_0_0());
				}
				lv_contacts_0_0=ruleContact
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"contacts",
						lv_contacts_0_0,
						"csc498.Dsl1.Contact");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getRsvpsRSVPParserRuleCall_1_0());
				}
				lv_rsvps_1_0=ruleRSVP
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"rsvps",
						lv_rsvps_1_0,
						"csc498.Dsl1.RSVP");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getEmailsEmailParserRuleCall_2_0());
				}
				lv_emails_2_0=ruleEmail
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"emails",
						lv_emails_2_0,
						"csc498.Dsl1.Email");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleContact
entryRuleContact returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContactRule()); }
	iv_ruleContact=ruleContact
	{ $current=$iv_ruleContact.current; }
	EOF;

// Rule Contact
ruleContact returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Contact'
		{
			newLeafNode(otherlv_0, grammarAccess.getContactAccess().getContactKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContactAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContactRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='email'
		{
			newLeafNode(otherlv_2, grammarAccess.getContactAccess().getEmailKeyword_2());
		}
		(
			(
				lv_email_3_0=RULE_STRING
				{
					newLeafNode(lv_email_3_0, grammarAccess.getContactAccess().getEmailSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContactRule());
					}
					setWithLastConsumed(
						$current,
						"email",
						lv_email_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleRSVP
entryRuleRSVP returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRSVPRule()); }
	iv_ruleRSVP=ruleRSVP
	{ $current=$iv_ruleRSVP.current; }
	EOF;

// Rule RSVP
ruleRSVP returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='RSVP'
		{
			newLeafNode(otherlv_0, grammarAccess.getRSVPAccess().getRSVPKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRSVPAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRSVPRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='message'
		{
			newLeafNode(otherlv_2, grammarAccess.getRSVPAccess().getMessageKeyword_2());
		}
		(
			(
				lv_message_3_0=RULE_STRING
				{
					newLeafNode(lv_message_3_0, grammarAccess.getRSVPAccess().getMessageSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRSVPRule());
					}
					setWithLastConsumed(
						$current,
						"message",
						lv_message_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleEmail
entryRuleEmail returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmailRule()); }
	iv_ruleEmail=ruleEmail
	{ $current=$iv_ruleEmail.current; }
	EOF;

// Rule Email
ruleEmail returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Email'
		{
			newLeafNode(otherlv_0, grammarAccess.getEmailAccess().getEmailKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEmailAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmailRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='to'
		{
			newLeafNode(otherlv_2, grammarAccess.getEmailAccess().getToKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getEmailAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmailRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getEmailAccess().getContactsContactCrossReference_4_0());
				}
			)
		)+
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getEmailAccess().getRightCurlyBracketKeyword_5());
		}
		otherlv_6='message'
		{
			newLeafNode(otherlv_6, grammarAccess.getEmailAccess().getMessageKeyword_6());
		}
		(
			(
				lv_message_7_0=RULE_STRING
				{
					newLeafNode(lv_message_7_0, grammarAccess.getEmailAccess().getMessageSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmailRule());
					}
					setWithLastConsumed(
						$current,
						"message",
						lv_message_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
